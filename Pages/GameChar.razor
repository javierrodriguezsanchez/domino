@using DominoServer.Pages.Components
@page "/GameChar"

<PageTitle>Game</PageTitle>

@if(Bridge2.torneo==null)
{
    <div style="background-color: white; color:black; padding:10%; margin-bottom:2%;">
        <p style="display:none;">@(TodoCorrecto=false)</p>
        <h1>Ha ocurrido algun error</h1>
        <h2>Haga click en el boton para regresar atras</h2>
        <button>
            <NavLink  class="NavLink" href=""><p style=" margin-bottom:0px;">Volver</p></NavLink>
        </button>
    </div>
}

@if(salir)
{
    <div id="salir">
        <h1>¿Desea abandonar?</h1>
        <div>
            <NavLink  class="NavLink" href="">
                <button style="background-color: rgb(27, 177, 42);">
                    Si
                </button>
            </NavLink>
            <button style="background-color: rgb(216, 2, 2);" @onclick="Salida">No</button>
        </div>
    </div>
}

@if(EndOfTheRound && !EndOfTheTorney)
{
    <h1 class="JuegoTerminado">Ronda Terminada</h1>
    <div id="resumen">
        <div>    
            <div>
                <p>@(Bridge2.jugadores[0].Nombre):</p>
                @if(Bridge2.escenas.Current.manos[Bridge2.jugadores[0]].Count==0)
                {
                    <p>Se pego</p>
                }
                @foreach (var item in Bridge2.escenas.Current.manos[Bridge2.jugadores[0]].ToArray())
                {   
                    <PieceChar horizontal=false ficha=item></PieceChar>
                }
            </div>
            
            <div>
                <p>@(Bridge2.jugadores[1].Nombre):</p>
                @if(Bridge2.escenas.Current.manos[Bridge2.jugadores[1]].Count==0)
                {
                    <p>Se pego</p>
                }
                @foreach (var item in Bridge2.escenas.Current.manos[Bridge2.jugadores[1]].ToArray())
                {   
                    <PieceChar horizontal=false ficha=item></PieceChar>    
                }
            </div>
    </div>

    @if(Bridge2.jugadores.Length>=3)
    { 
        <div>       
            <div>
                <p>@(Bridge2.jugadores[2].Nombre):</p>
                @if(Bridge2.escenas.Current.manos[Bridge2.jugadores[2]].Count==0)
                {
                    <p>Se pego</p>
                }
                @foreach (var item in Bridge2.escenas.Current.manos[Bridge2.jugadores[2]].ToArray())
                {   
                    <PieceChar horizontal=false ficha=item></PieceChar>
                }
            </div>

            @if(Bridge2.jugadores.Length>=4)
            {
                <div style="display: flex;">
                    <p>@(Bridge2.jugadores[3].Nombre):</p>
                    @if(Bridge2.escenas.Current.manos[Bridge2.jugadores[3]].Count==0)
                    {
                        <p>Se pego</p>
                    }
                    @foreach (var item in Bridge2.escenas.Current.manos[Bridge2.jugadores[3]].ToArray())
                    {   
                        <PieceChar horizontal=false ficha=item></PieceChar>
                    }
                </div>
            }
        </div>
    }

    </div>

    <div style="display: flex;align-items:center;">
        <div style="border:solid; width:50% ;margin-top:3%;margin-bottom:3%; border-radius:20px;">
            <p class="JuegoTerminado" style="font-size:60px; margin:1%">Puntuaciones</p>
                @foreach(var item in Bridge2.torneo!.Scores)
                {
                    <p class="JuegoTerminado" style="font-size:30px; text-decoration:none;margin:0.5%">Equipo# @(item.Key): @item.Value</p> 
                }
        </div>
            
        <div id="aaa">
            <button @onclick="NextRound" class="buttonindex">
                Proximo Juego
            </button>
                        
            <NavLink  class="NavLink" href="">
                <button class="buttonindex">
                    <p style=" margin-bottom:0px;">Salir del Juego</p>
                </button>
            </NavLink>
        </div>
    </div>
}

@if(EndOfTheTorney)
{
    <h1 class="JuegoTerminado"> Ganador: </h1>
    
    <div class="Final">
        <div>
            <p>Equipo #@Bridge2.torneo!.Ganador</p>
            @foreach (var item in Bridge2.jugadores)
            {
                @if(Bridge2.torneo!.Ganador==item.Equipo)
                {<p>@item.Nombre</p>}        
            }
        </div>
        <div>
            <p>Puntuacion:</p> 
            <p>@Bridge2.torneo.Scores[Bridge2.torneo.Ganador]</p>
        </div>
    </div>

    <div class="Final">
        <div>
            <NavLink  class="NavLink" href="Game">
                <button @onclick="OnInitialized" class="buttonindex">
                    <p style=" margin-bottom:0px;">Jugar de nuevo</p>
                </button>
            </NavLink>
        </div>
        <div>
            <NavLink  class="NavLink" href="">
                <button class="buttonindex"  style="width:200px;">
                    <p style=" margin-bottom:0px;">Volver a menu principal</p>
                </button>
            </NavLink>
        </div>
    </div>
}


@if (TodoCorrecto && !EndOfTheRound)
{
    <div style="display:flex;">
        
        <div class="columna">
            <div class="corner">
                <button @onclick="NextPlay" disabled="@salir">
                    ▶
                </button>
            </div>
            <div class="ManoVertical">
                <h1>@(Bridge2.jugadores[1].Nombre)</h1>
                @foreach (var item in Bridge2.escenas.Current.manos[Bridge2.jugadores[1]].ToArray())
                {
                    <PieceChar horizontal ficha=item></PieceChar>
                }
            </div>
            <div class="corner">
                @foreach(var item in Bridge2.torneo!.Scores)
                {
                    <p>Equipo# @(item.Key): @item.Value</p> 
                }
            </div>
        </div>

        <div style="flex-direction:column; width:1100px;">
            <div class="ManoHorizontal">
                <h1>@(Bridge2.jugadores[0].Nombre)</h1>
                @foreach (var item in Bridge2.escenas.Current.manos[Bridge2.jugadores[0]].ToArray())
                {
                    <PieceChar horizontal=false ficha=item></PieceChar>                    
                }
            </div>

            <div id="mesa" style=@mesa()>
                @foreach (var item in Bridge2.escenas.Current.Tablero.ToArray())
                {
                    <div>
                        <PieceChar ficha=item horizontal=@(!esdoble(item.values))></PieceChar>
                    </div>
                }
            </div>
            @if(Bridge2.jugadores.Length>=3)
            {
            <div class="ManoHorizontal">
                <h1>@(Bridge2.jugadores[2].Nombre)</h1>
                @foreach (var item in Bridge2.escenas.Current.manos[Bridge2.jugadores[2]].ToArray())
                {
                    <PieceChar horizontal=false ficha=item></PieceChar>
                }
            </div>
            }
        </div>

        <div class="columna">
            <div class="corner">
                <button @onclick="Salida">
                    <p>↩</p>
                </button>
            </div>
            @if(Bridge2.jugadores.Length>=4)
            {
            <div class="ManoVertical">
                
                <h1>@(Bridge2.jugadores[3].Nombre)</h1>
                @foreach (var item in Bridge2.escenas.Current.manos[Bridge2.jugadores[3]].ToArray())
                {
                    <PieceChar ficha="item" horizontal></PieceChar>
                }
            </div>
            }

        <div class="corner">
            <h3>Jugador Actual</h3>
            <p style="font-size: 25px; text-align: center;">@Bridge2.escenas.Current.JugadorUltimaJugada.Nombre</p>
        </div>
        </div>

    </div>
}

@code{
    bool TodoCorrecto=true;
    bool EndOfTheTorney=false;
    bool EndOfTheRound=false;
    bool salir=false;

    void Salida()
    {
        salir=!salir;
    }
    void NextPlay() {EndOfTheRound=!Bridge2.escenas.MoveNext();}

    void NextRound()
    {
        if(Bridge2.juegos.MoveNext())
        {
            EndOfTheRound=false;
            Bridge2.escenas=Bridge2.juegos.Current.GetEnumerator();
            NextPlay();
        }
        else
        {
            EndOfTheTorney=true;
        }
    }

    bool esdoble<T>(T[] ficha)
    {
        return ficha[0]!.Equals(ficha[1]);
    }

    protected override void OnInitialized()
    {
        Bridge2.torneo=new DominoGame.Torney<char>(Bridge2.jugadores,Bridge2.reglas);
        Bridge2.juegos=Bridge2.torneo.GetEnumerator();
        if(Bridge2.juegos.MoveNext())
        {
            Bridge2.escenas=Bridge2.juegos.Current.GetEnumerator();
            if(Bridge2.escenas.MoveNext())
                Bridge2.escenaActual=Bridge2.escenas.Current;
        }
        TodoCorrecto=true;
        EndOfTheTorney=false;
        EndOfTheRound=false;
        salir=false;
    }

    string mesa()
    {
        if(Bridge2.escenas.Current.Tablero.ToArray().Length>10)return "justify-content:flex-start;";
        return "";
    }
}
